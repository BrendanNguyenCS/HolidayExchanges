@model HolidayExchanges.ViewModels.RegisterViewModel

@{
    ViewBag.Title = "Register";
}

<style>
    #RegisterTitle {
        margin-bottom: 10px;
    }
</style>

<div class="container">

    <section id="RegisterTitle">
        <div class="row">
            <div class="page-header col-12">
                <h1 class="text-center display-4">Register</h1>
                <hr />
            </div>
        </div>
    </section>

    <!-- TODO: Ask jon how to fix the XS screen size fields -->
    <section id="RegisterForm">
        <div class="container body-content">
            @using (Html.BeginForm("Register", "Login", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <div class="container form-horizontal">
                    <div class="container-fluid offset-lg-1 offset-xl-1">
                        <div class="row">
                            <div class="col-12">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                <fieldset>
                                    <legend>Login Information</legend>

                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.User.UserName, new { @class = "col-form-label col-sm-4 offset-md-1 col-md-3 offset-lg-1 col-lg-3 required font-weight-bold" })
                                        <div class="col-8 col-md-6 col-lg-5">
                                            @Html.EditorFor(model => model.User.UserName, new { htmlAttributes = new { @class = "form-control", required = "required", style = "border: 1px solid #d9534f;" } })
                                            @Html.ValidationMessageFor(model => model.User.UserName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.User.Password, new { @class = "col-form-label col-sm-4 offset-md-1 col-md-3 offset-lg-1 col-lg-3 required font-weight-bold" })
                                        <div class="col-8 col-md-6 col-lg-5">
                                            @Html.PasswordFor(model => model.User.Password, new { @class = "form-control", required = "required", style = "border: 1px solid #d9534f;" })
                                            @Html.ValidationMessageFor(model => model.User.Password, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.ConfirmPassword, new { @class = "col-form-label col-sm-4 col-md-4 offset-lg-1 col-lg-3 required font-weight-bold" })
                                        <div class="col-8 col-md-6 col-lg-5">
                                            @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control", required = "required", style = "border: 1px solid #d9534f;" })
                                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </fieldset>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-12">
                                <fieldset>
                                    <legend>Personal Information</legend>

                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.User.FirstName, new { @class = "col-form-label col-sm-4 offset-md-1 col-md-3 offset-lg-1 col-lg-3" })
                                        <div class="col-8 col-md-6 col-lg-5">
                                            @Html.EditorFor(model => model.User.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.User.FirstName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.User.LastName, new { @class = "col-form-label col-sm-4 offset-md-1 col-md-3 offset-lg-1 col-lg-3" })
                                        <div class="col-8 col-md-6 col-lg-5">
                                            @Html.EditorFor(model => model.User.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.User.LastName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.User.Email, new { @class = "col-form-label col-sm-4 offset-md-1 col-md-3 offset-lg-1 col-lg-3 required font-weight-bold" })
                                        <div class="col-8 col-md-6 col-lg-5">
                                            @Html.EditorFor(model => model.User.Email, new { htmlAttributes = new { @class = "form-control", type = "email", placeholder = "someone@gmail.com", required = "required", style = "border: 1px solid #d9534f;" } })
                                            @Html.ValidationMessageFor(model => model.User.Email, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.User.Birthday, new { @class = "col-form-label col-sm-4 offset-md-1 col-md-3 offset-lg-1 col-lg-3" })
                                        <div class="col-8 col-sm-5 col-md-4 col-lg-3">
                                            @Html.EditorFor(model => model.User.Birthday, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                                            @Html.ValidationMessageFor(model => model.User.Birthday, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </fieldset>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-12">
                                <fieldset>
                                    <legend>Contact Information</legend>

                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.User.Address1, new { @class = "col-form-label col-sm-4 offset-md-1 col-md-3" })
                                        <div class="col-8 col-md-6 col-lg-5">
                                            @Html.EditorFor(model => model.User.Address1, new { htmlAttributes = new { @class = "form-control", placeholder = "Address Line 1" } })
                                            <small class="form-text text-muted">Street address, P.O. box, company name, c/o</small>
                                            @Html.ValidationMessageFor(model => model.User.Address1, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.User.Address2, new { @class = "col-form-label col-sm-4 offset-md-1 col-md-3" })
                                        <div class="col-8 col-md-6 col-lg-5">
                                            @Html.EditorFor(model => model.User.Address2, new { htmlAttributes = new { @class = "form-control", placeholder = "Address Line 2" } })
                                            <small class="form-text text-muted">Apartment, suite, unit, building, floor, etc.</small>
                                            @Html.ValidationMessageFor(model => model.User.Address2, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.User.City, new { @class = "col-form-label col-sm-4 offset-md-1 col-md-3" })
                                        <div class="col-8 col-md-6 col-lg-5">
                                            @Html.EditorFor(model => model.User.City, new { htmlAttributes = new { @class = "form-control", placeholder = "City or Town" } })
                                            @Html.ValidationMessageFor(model => model.User.City, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.User.State, new { @class = "col-form-label col-sm-4 col-md-4 offset-lg-1 col-lg-3" })
                                        <div class="col-8 col-md-6 col-lg-5">
                                            @Html.EditorFor(model => model.User.State, new { htmlAttributes = new { @class = "form-control", placeholder = "State, Province, Region" } })
                                            <small class="form-text text-muted">If from US, please enter 2-letter abbreviation (ex. MA)</small>
                                            @Html.ValidationMessageFor(model => model.User.State, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.User.Zip, new { @class = "col-form-label col-sm-4 offset-md-1 col-md-3" })
                                        <div class="col-8 col-sm-6 col-md-4 col-lg-3">
                                            @Html.EditorFor(model => model.User.Zip, new { htmlAttributes = new { @class = "form-control", placeholder = "ZIP or Postal Code" } })
                                            @Html.ValidationMessageFor(model => model.User.Zip, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.User.Country, new { @class = "col-form-label col-sm-4 offset-md-1 col-md-3" })
                                        <div class="col-8 col-md-6 col-lg-5">
                                            @Html.EditorFor(model => model.User.Country, new { htmlAttributes = new { @class = "form-control", placeholder = "Country" } })
                                            <!-- implement cool drop down -->
                                            @Html.ValidationMessageFor(model => model.User.Country, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.User.PhoneNumber, new { @class = "col-form-label col-sm-4 offset-md-1 col-md-3" })
                                        <div class="col-8 col-sm-6 col-md-4 col-lg-3">
                                            <input type="tel" name="@Html.NameFor(model => model.User.PhoneNumber)" value="@Model.User.PhoneNumber" id="PhoneNumber" pattern="[\(]\d{3}[\)]\d{3}[\-]\d{4}" class="form-control" placeholder="(123)456-7890" />
                                            <small class="form-text text-muted">US based Phone Number format: (123)456-7890</small>
                                            @Html.ValidationMessageFor(model => model.User.PhoneNumber, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </fieldset>
                            </div>
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col text-center">
                            @Html.Button("Register", "btn btn-primary", "RegisterSubmit", HtmlExtensionsButton.HtmlButtonTypes.submit)
                        </div>
                    </div>
                </div>
            }
        </div>
    </section>
</div>