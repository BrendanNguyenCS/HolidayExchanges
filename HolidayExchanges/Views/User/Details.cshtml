@model HolidayExchanges.ViewModels.UserViewModel

@{
    ViewBag.Title = "User Details";
}

<style>
    ul {
        list-style: none;
    }
</style>

<div class="container">
    <section id="UserDetailsTitle">
        <div class="row">
            <div class="page-header col-12">
                <h1 class="display-4 text-center">Details for @Model.User.UserName</h1>
                <hr />
            </div>
        </div>
    </section>

    <section id="UserDetailsList">
        <div class="container offset-md-1">
            <div class="row">
                <div class="col-12">
                    <h4 class="text-danger">@ViewBag.NotAuthorizedMessage</h4>
                </div>
            </div>
            <dl class="row">

                <!-- #region RemovePWSalt-->
                @*<dt>
                        @Html.DisplayNameFor(model => model.Password)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Password)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Salt)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Salt)
                    </dd>
                *@
                <!-- #endregion -->

                <dt class="col-5 offset-md-1 col-md-3 col-xl-3">
                    @Html.DisplayNameFor(model => model.User.FirstName)
                </dt>
                <dd class="col-12 col-sm-7">
                    @Html.DisplayFor(model => model.User.FirstName)
                </dd>

                <dt class="col-5 offset-md-1 col-md-3 col-xl-3">
                    @Html.DisplayNameFor(model => model.User.LastName)
                </dt>
                <dd class="col-12 col-sm-7">
                    @Html.DisplayFor(model => model.User.LastName)
                </dd>

                <dt class="col-5 offset-md-1 col-md-3 col-xl-3">
                    @Html.DisplayNameFor(model => model.User.UserName)
                </dt>
                <dd class="col-12 col-sm-7">
                    @Html.DisplayFor(model => model.User.UserName)
                </dd>

                <dt class="col-5 offset-md-1 col-md-3 col-xl-3">
                    Address
                </dt>

                <dd class="col-12 col-sm-7">

                    <!-- #region Testing Information Checking -->
                    @*<p translate="no">
                            @Model.User.Address1<br />
                            @if (Model.User.Address2 != null)
                            {
                                @Model.User.Address2<br />
                            }
                            @Model.User.City, @Model.User.State @Model.User.Zip @Model.User.Country
                        </p>

                        <p>-----------------------------------------------</p>
                    *@
                    <!-- #endregion -->

                    @{
                        var user = Model.User;
                        <!-- Zip is not required to have a full address -->
                        if (user.Address1 == null || user.City == null || user.State == null || user.Country == null)
                        {
                            <p>Your address is incomplete. Please complete your contact information on your profile to view this field (other than Address Line 2)</p>
                        }
                        else
                        {
                            var zip = Model.User.Zip == null ? Model.User.Zip : "";
                            <p translate="no">
                                @Model.User.Address1<br />
                                @if (Model.User.Address2 != null)
                                {
                                    @Model.User.Address2<br />
                                }
                                @Model.User.City, @Model.User.State @zip<br />
                                @Model.User.Country
                            </p>
                        }
                    }
                </dd>

                <!-- #region Long Address (with all fields in its own row) -->
                @*<dt>
                        @Html.DisplayNameFor(model => model.User.Address1)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.User.Address1)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.User.Address2)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.User.Address2)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.User.City)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.User.City)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.User.State)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.User.State)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.User.Zip)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.User.Zip)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.User.Country)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.User.Country)
                    </dd>*@
                <!-- #endregion -->

                <dt class="col-5 offset-md-1 col-md-3 col-xl-3">
                    @Html.DisplayNameFor(model => model.User.Email)
                </dt>

                <dd class="col-12 col-sm-7">
                    @Html.DisplayFor(model => model.User.Email)
                </dd>

                <dt class="col-5 offset-md-1 col-md-3 col-xl-3">
                    @Html.DisplayNameFor(model => model.User.Birthday)
                </dt>

                <dd class="col-12 col-sm-7">
                    @Html.DisplayFor(model => model.User.Birthday)
                </dd>

                <dt class="col-5 offset-md-1 col-md-3 col-xl-3">
                    @Html.DisplayNameFor(model => model.User.PhoneNumber)
                </dt>

                <dd class="col-12 col-sm-7">
                    @Html.DisplayFor(model => model.User.PhoneNumber)
                </dd>

                <dt class="col-5 offset-md-1 col-md-3 col-xl-3">
                    @Html.DisplayNameFor(model => model.Groups)
                </dt>

                <!-- #region Creating List not using ul li -->
                @*@foreach (var group in Model.Groups)
                    {
                        <dd>
                            - @group.Name<br />&emsp;Date: @group.ExchangeDate
                        </dd>
                    }*@
                <!-- #endregion -->
                <!-- #region Listing Groups With FOREACH Loop -->
                @*<dd>
                        <ul>
                            @foreach (var group in Model.Groups)
                            {
                                <li>@group.Name&nbsp;(Date: @group.ExchangeDate)</li>
                            }
                        </ul>
                    </dd>*@
                <!-- #endregion -->
                <!-- #region Listing Groups with Recipients (Still testing) -->
                <dd class="col-12 col-sm-7">
                    @if (Model.Groups.Count == 0)
                    {
                        <p>You are not in any groups.</p>
                    }
                    <ul style="padding-left: 0;">
                        @for (int i = 0; i < Model.Groups.Count; i++)
                        {
                            var group = Model.Groups[i];
                            <li>
                                @group.Name&nbsp;(Date: @group.ExchangeDate)
                                <ul>
                                    @{
                                        if (!group.HasBeenPaired)
                                        {
                                            <li>This group hasn't picked pairs yet.</li>
                                        }
                                        else
                                        {
                                            <li>Recipient: @Model.Recipients[i].UserName</li>
                                        }
                                    }
                                </ul>
                            </li>
                        }
                    </ul>
                </dd>
                <!-- #endregion -->
            </dl>
            <section id="UserDetailButtons">
                <div class="row">
                    <div class="btn-group col-12 offset-md-1" role="group" aria-label="Buttons for user details page">
                        @Html.ActionLink("Edit", "Edit", new { id = Model.User.UserID }, new { @class = "btn btn-primary mr-0" })
                        @Html.ActionLink("Add to wishlist", "Create", "Wish", routeValues: null, htmlAttributes: new { @class = "btn btn-primary mr-0" })
                        @Html.ActionLink("View Wishlist", "Wishlist", new { id = Model.User.UserID }, new { @class = "btn btn-primary mr-0" })
                        @Html.ActionLink("Back to Home", "Index", "Home", routeValues: null, htmlAttributes: new { @class = "btn btn-primary" })
                    </div>
                </div>
            </section>
        </div>
    </section>
</div>