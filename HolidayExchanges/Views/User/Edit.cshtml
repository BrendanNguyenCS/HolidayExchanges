@model HolidayExchanges.ViewModels.UserEditViewModel

@{
    ViewBag.Title = "Edit Profile";
}

<div class="container">
    <section id="UserEditTitle">
        <div class="row">
            <div class="page-header col-12">
                <h1 class="text-center display-4">Edit Your Information</h1>
                <hr />
            </div>
        </div>
    </section>

    <section id="UserEditForm">
        <div class="container">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="container-fluid form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.ID)
                    @Html.HiddenFor(model => model.OriginalEmail)
                    @Html.HiddenFor(model => model.OriginalUserName)

                    <div class="form-group row">
                        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "col-form-label col-sm-4 offset-md-1 col-md-3 offset-lg-1 col-lg-3" })
                        <div class="col-8 col-md-6 col-lg-5">
                            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "col-form-label col-sm-4 offset-md-1 col-md-3 offset-lg-1 col-lg-3" })
                        <div class="col-8 col-md-6 col-lg-5">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "col-form-label col-sm-4 offset-md-1 col-md-3 offset-lg-1 col-lg-3" })
                        <div class="col-8 col-md-6 col-lg-5">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.Address1, new { @class = "col-form-label col-sm-4 offset-md-1 col-md-3" })
                        <div class="col-8 col-md-6 col-lg-5">
                            @Html.EditorFor(model => model.Address1, new { htmlAttributes = new { @class = "form-control", placeholder = "Address Line 1" } })
                            <small class="form-text text-muted">Street address, P.O. box, company name, c/o</small>
                            @Html.ValidationMessageFor(model => model.Address1, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.Address2, htmlAttributes: new { @class = "col-form-label col-sm-4 offset-md-1 col-md-3" })
                        <div class="col-8 col-md-6 col-lg-5">
                            @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control" } })
                            <small class="help-block">Apartment, suite, unit, building, floor, etc.</small>
                            @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "col-form-label col-sm-4 offset-md-1 col-md-3" })
                        <div class="col-8 col-md-6 col-lg-5">
                            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "col-form-label col-sm-4 col-md-4 offset-lg-1 col-lg-3" })
                        <div class="col-8 col-md-6 col-lg-5">
                            @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control", placeholder = "State, Province, Region" } })
                            <small class="form-text text-muted">If from US, please enter 2-letter abbreviation (ex. MA)</small>
                            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.Zip, new { @class = "col-form-label col-sm-4 offset-md-1 col-md-3" })
                        <div class="col-8 col-sm-6 col-md-4 col-lg-3">
                            @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control", placeholder = "ZIP or Postal Code" } })
                            @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.Country, new { @class = "col-form-label col-sm-4 offset-md-1 col-md-3" })
                        <div class="col-8 col-md-6 col-lg-5">
                            @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control", placeholder = "Country" } })
                            <!-- implement cool drop down -->
                            @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.Email, new { @class = "col-form-label col-sm-4 offset-md-1 col-md-3 offset-lg-1 col-lg-3" })
                        <div class="col-8 col-md-6 col-lg-5">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", type = "email", placeholder = "someone@gmail.com" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.Birthday, new { @class = "col-form-label col-sm-4 offset-md-1 col-md-3 offset-lg-1 col-lg-3" })
                        <div class="col-8 col-sm-5 col-md-4 col-lg-3">
                            @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                            @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.PhoneNumber, new { @class = "col-form-label col-sm-4 offset-md-1 col-md-3" })
                        <div class="col-8 col-sm-6 col-md-4 col-lg-3">
                            <input type="tel" name="@Html.NameFor(model => model.PhoneNumber)" value="@Model.PhoneNumber" id="PhoneNumber" class="form-control" />
                            <small class="form-text text-muted">US based Phone Number format: (123) 456-7890</small>
                            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="offset-sm-3 col-md-9 offset-md-3 col-md-9 offset-lg-4 col-lg-8">
                            <input type="submit" value="Save" class="btn btn-primary" />
                            @Html.ActionLink("Back to Profile", "Details", new { id = Model.ID }, new { @class = "btn btn-outline-secondary btn-sm" })
                        </div>
                    </div>
                </div>
            }
        </div>
    </section>
</div>

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $('#PhoneNumber').usPhoneFormat({
                format: '(xxx) xxx-xxxx',
            });
        });
    </script>
}